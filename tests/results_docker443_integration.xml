<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="1" failures="0" skipped="0" tests="1" time="8.440" timestamp="2025-07-15T16:27:08.827223" hostname="DESKTOP-V01HJTI"><testcase classname="" name="tests.world_sim.test_docker443_integration" time="0.000"><error message="collection failure">D:\Python311\Lib\site-packages\_pytest\runner.py:341: in from_call
    result: Optional[TResult] = func()
D:\Python311\Lib\site-packages\_pytest\runner.py:372: in &lt;lambda&gt;
    call = CallInfo.from_call(lambda: list(collector.collect()), "collect")
D:\Python311\Lib\site-packages\_pytest\python.py:531: in collect
    self._inject_setup_module_fixture()
D:\Python311\Lib\site-packages\_pytest\python.py:545: in _inject_setup_module_fixture
    self.obj, ("setUpModule", "setup_module")
D:\Python311\Lib\site-packages\_pytest\python.py:310: in obj
    self._obj = obj = self._getobj()
D:\Python311\Lib\site-packages\_pytest\python.py:528: in _getobj
    return self._importtestmodule()
D:\Python311\Lib\site-packages\_pytest\python.py:617: in _importtestmodule
    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)
D:\Python311\Lib\site-packages\_pytest\pathlib.py:567: in import_path
    importlib.import_module(module_name)
D:\Python311\Lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
&lt;frozen importlib._bootstrap&gt;:1204: in _gcd_import
    ???
&lt;frozen importlib._bootstrap&gt;:1176: in _find_and_load
    ???
&lt;frozen importlib._bootstrap&gt;:1147: in _find_and_load_unlocked
    ???
&lt;frozen importlib._bootstrap&gt;:690: in _load_unlocked
    ???
D:\Python311\Lib\site-packages\_pytest\assertion\rewrite.py:186: in exec_module
    exec(co, module.__dict__)
tests\world_sim\test_docker443_integration.py:26: in &lt;module&gt;
    from core.agent_factory import Docker443ModelRunner
src\core\__init__.py:25: in &lt;module&gt;
    from .agent_factory import AgentFactory
src\core\agent_factory.py:19: in &lt;module&gt;
    from src.memory.memory_manager import MemoryManager
src\__init__.py:56: in &lt;module&gt;
    from .core.factory.factory import AgentFactory
src\core\__init__.py:25: in &lt;module&gt;
    from .agent_factory import AgentFactory
src\core\agent_factory.py:22: in &lt;module&gt;
    from src.ai.providers.provider_registry import get_provider_registry
src\ai\__init__.py:9: in &lt;module&gt;
    from .nas import *
src\ai\nas\__init__.py:9: in &lt;module&gt;
    from .recipe_nas import RecipeNAS
src\ai\nas\recipe_nas.py:17: in &lt;module&gt;
    from .performance_predictor import PerformancePredictor
src\ai\nas\performance_predictor.py:23: in &lt;module&gt;
    from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
D:\Python311\Lib\site-packages\sklearn\__init__.py:73: in &lt;module&gt;
    from .base import clone  # noqa: E402
D:\Python311\Lib\site-packages\sklearn\base.py:19: in &lt;module&gt;
    from .utils._estimator_html_repr import _HTMLDocumentationLinkMixin, estimator_html_repr
D:\Python311\Lib\site-packages\sklearn\utils\__init__.py:15: in &lt;module&gt;
    from ._chunking import gen_batches, gen_even_slices
D:\Python311\Lib\site-packages\sklearn\utils\_chunking.py:11: in &lt;module&gt;
    from ._param_validation import Interval, validate_params
D:\Python311\Lib\site-packages\sklearn\utils\_param_validation.py:17: in &lt;module&gt;
    from .validation import _is_arraylike_not_scalar
D:\Python311\Lib\site-packages\sklearn\utils\validation.py:21: in &lt;module&gt;
    from ..utils._array_api import _asarray_with_order, _is_numpy_namespace, get_namespace
D:\Python311\Lib\site-packages\sklearn\utils\_array_api.py:17: in &lt;module&gt;
    from .fixes import parse_version
D:\Python311\Lib\site-packages\sklearn\utils\fixes.py:20: in &lt;module&gt;
    import pandas as pd
D:\Python311\Lib\site-packages\pandas\__init__.py:59: in &lt;module&gt;
    from pandas.core.api import (
D:\Python311\Lib\site-packages\pandas\core\api.py:1: in &lt;module&gt;
    from pandas._libs import (
D:\Python311\Lib\site-packages\pandas\_libs\__init__.py:18: in &lt;module&gt;
    from pandas._libs.interval import Interval
interval.pyx:1: in init pandas._libs.interval
    ???
E   ValueError: numpy.dtype size changed, may indicate binary incompatibility. Expected 96 from C header, got 88 from PyObject</error></testcase></testsuite></testsuites>